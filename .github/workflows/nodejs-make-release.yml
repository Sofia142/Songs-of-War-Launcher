name: Make release

on:
  # Only allow release manually
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'info'
      tags:
        description: 'Generate a release'
jobs:
  CreateRelease:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
    steps:
      - name: Get Launcher Version
        uses: nyaascii/package-version@1.0.2-pre
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        with:
          tag_name: v${{ env.PACKAGE_VERSION }}
          release_name: v${{ env.PACKAGE_VERSION }}
          draft: true
          prerelease: false

  BuildForLinux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
    steps:
      - name: Wait for release creation
        uses: lewagon/wait-on-check-action@v0.1-beta.2
        with:
          ref: master
          check-name: CreateRelease
          repo-token: ${{ secrets.GIT_TOKEN }}
          wait-interval: 20 # seconds
      - uses: actions/checkout@v2
      - name: Check GitHub Status
        uses: crazy-max/ghaction-github-status@v1
      - name: Setup node 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: package-version
        uses: nyaascii/package-version@1.0.2-pre
      - name: Install JS Modules
        run: yarn install
      - name: Checking code syntax
        run: yarn lint
      #- run: npm test - Fuck this, I'm not going to spend 5 hours debugging why the CI can't start a chrome process
      - run: npm run dist -- LINUX
      - name: Upload Release Asset AppImage
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: dist/songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.AppImage
          asset_name: songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.AppImage
          asset_content_type: application/exe
      - name: Upload Release Asset Latest Linux Yaml File
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: dist/latest-linux.yml
          asset_name: latest-linux.yml
          asset_content_type: text/yaml
  BuildForMacOS:
    runs-on: macos-latest
    strategy:
      matrix:
        operating-system: [macos-latest]
    steps:
      - name: Wait for release creation
        uses: lewagon/wait-on-check-action@v0.1-beta.2
        with:
          ref: master
          check-name: CreateRelease
          repo-token: ${{ secrets.GIT_TOKEN }}
          wait-interval: 20 # seconds
      - uses: actions/checkout@v2
      - name: Check GitHub Status
        uses: crazy-max/ghaction-github-status@v1
      - name: Setup node 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: package-version
        uses: nyaascii/package-version@1.0.2-pre
      - name: Install JS Modules
        run: yarn install
      - name: Checking code syntax
        run: yarn lint
      - run: npm test
      - run: npm run dist -- MAC
      - name: Upload dmg
        uses: actions/upload-artifact@v2
        with:
          name: songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.dmg
          path: dist/songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.dmg
      - name: Upload pkg
        uses: actions/upload-artifact@v2
        with:
          name: songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.pkg
          path: dist/songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.pkg
      - name: Upload blockmap
        uses: actions/upload-artifact@v2
        with:
          name: songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.dmg.blockmap
          path: dist/songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.dmg.blockmap
      - name: Upload latest-mac file
        uses: actions/upload-artifact@v2
        with:
          name: latest-mac.yml
          path: dist/latest-mac.yml
  BuildForWindows:
    runs-on: windows-latest
    strategy:
      matrix:
        operating-system: [windows-latest]
    steps:
      - name: Wait for release creation
        uses: lewagon/wait-on-check-action@v0.1-beta.2
        with:
          ref: master
          check-name: CreateRelease
          repo-token: ${{ secrets.GIT_TOKEN }}
          wait-interval: 20 # seconds
      - uses: actions/checkout@v2
      - name: Check GitHub Status
        uses: crazy-max/ghaction-github-status@v1
      - name: Setup node 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: package-version
        uses: nyaascii/package-version@1.0.2-pre
      - name: Install JS Modules
        run: yarn install
      - name: Checking code syntax
        run: yarn lint
      - run: npm test
      - run: npm run dist -- WINDOWS
      - name: Upload Artifact 1
        uses: actions/upload-artifact@v2
        with:
          name: songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.exe
          path: dist/songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.exe
      - name: Upload Artifact 2
        uses: actions/upload-artifact@v2
        with:
          name: songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.exe.blockmap
          path: dist/songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.exe.blockmap
      - name: Upload Artifact 3
        uses: actions/upload-artifact@v2
        with:
          name: latest.yml
          path: dist/latest.yml

