name: Upload release assets to release

on: 
  release:
    types: [published, unpublished, created, edited, deleted, prereleased, released]

jobs:
  BuildForLinux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
    steps:
      - uses: nelonoel/branch-name@v1
      - uses: actions/checkout@v2
      - name: Check GitHub Status
        uses: crazy-max/ghaction-github-status@v1
      - name: Setup node 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: package-version
        uses: nyaascii/package-version@1.0.2-pre
      - name: Install JS Modules
        run: yarn install
      - name: Checking code syntax
        run: yarn lint
      #- run: npm test - Fuck this, I'm not going to spend 5 hours debugging why the CI can't start a chrome process
      - run: npm run dist -- LINUX
      - name: Upload AppImage
        uses: JasonEtco/upload-to-release@master
        with:
          args: dist/songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
      - name: Upload Latest Linux File
        uses: JasonEtco/upload-to-release@master
        with:
          args: dist/latest-linux.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
  BuildForMacOS:
    runs-on: macos-latest
    strategy:
      matrix:
        operating-system: [macos-latest]
    steps:
      - uses: nelonoel/branch-name@v1
      - name: Wait for release creation
        uses: lewagon/wait-on-check-action@v0.1-beta.2
        with:
          ref: ${BRANCH_NAME}
          check-name: CreateRelease
          repo-token: ${{ secrets.GIT_TOKEN }}
          wait-interval: 20 # seconds
      - uses: actions/checkout@v2
      - name: Check GitHub Status
        uses: crazy-max/ghaction-github-status@v1
      - name: Setup node 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: package-version
        uses: nyaascii/package-version@1.0.2-pre
      - name: Install JS Modules
        run: yarn install
      - name: Checking code syntax
        run: yarn lint
      - run: npm test
      - run: npm run dist -- MAC
      - name: Upload dmg
        uses: actions/upload-artifact@v2
        with:
          name: songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.dmg
          path: dist/songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.dmg
      - name: Upload pkg
        uses: actions/upload-artifact@v2
        with:
          name: songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.pkg
          path: dist/songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.pkg
      - name: Upload blockmap
        uses: actions/upload-artifact@v2
        with:
          name: songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.dmg.blockmap
          path: dist/songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.dmg.blockmap
      - name: Upload latest-mac file
        uses: actions/upload-artifact@v2
        with:
          name: latest-mac.yml
          path: dist/latest-mac.yml
  BuildForWindows:
    runs-on: windows-latest
    strategy:
      matrix:
        operating-system: [windows-latest]
    steps:
      - uses: nelonoel/branch-name@v1
      - name: Wait for release creation
        uses: lewagon/wait-on-check-action@v0.1-beta.2
        with:
          ref: ${BRANCH_NAME}
          check-name: CreateRelease
          repo-token: ${{ secrets.GIT_TOKEN }}
          wait-interval: 20 # seconds
      - uses: actions/checkout@v2
      - name: Check GitHub Status
        uses: crazy-max/ghaction-github-status@v1
      - name: Setup node 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: package-version
        uses: nyaascii/package-version@1.0.2-pre
      - name: Install JS Modules
        run: yarn install
      - name: Checking code syntax
        run: yarn lint
      - run: npm test
      - run: npm run dist -- WINDOWS
      - name: Upload Artifact 1
        uses: actions/upload-artifact@v2
        with:
          name: songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.exe
          path: dist/songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.exe
      - name: Upload Artifact 2
        uses: actions/upload-artifact@v2
        with:
          name: songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.exe.blockmap
          path: dist/songs-of-war-launcher-setup-${{ env.PACKAGE_VERSION }}.exe.blockmap
      - name: Upload Artifact 3
        uses: actions/upload-artifact@v2
        with:
          name: latest.yml
          path: dist/latest.yml

