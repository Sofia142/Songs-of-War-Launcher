name: CI

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'info'
      tags:
        description: 'Test scenario tags'
jobs:
  CI_Linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Setup node 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: package-version
        uses: nyaascii/package-version@1.0.2-pre
      - name: Module Installation
        uses: CultureHQ/actions-yarn@master
        with:
          args: install
      - name: Checking code syntax
        uses: CultureHQ/actions-yarn@master
        with:
          args: lint
      - run: npm test
      - run: npm run dist:linux
      - name: Upload Artifact 1
        uses: actions/upload-artifact@v2
        with:
          name: Songs-of-War-Launcher-setup-${{ env.PACKAGE_VERSION }}.AppImage
          path: dist/Songs-of-War-Launcher-setup-${{ env.PACKAGE_VERSION }}.AppImage
      - name: Upload Artifact 2
        uses: actions/upload-artifact@v2
        with:
          name: latest-linux.yml
          path: dist/latest-linux.yml
  CI_MacOS:
    runs-on: macos-latest
    strategy:
      matrix:
        operating-system: [macos-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Setup node 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: package-version
        uses: nyaascii/package-version@1.0.2-pre
      - name: Module Installation
        uses: CultureHQ/actions-yarn@master
        with:
          args: install
      - name: Checking code syntax
        uses: CultureHQ/actions-yarn@master
        with:
          args: lint
      - run: npm test
      - run: npm run dist:mac
      - name: Upload Artifact 1
        uses: actions/upload-artifact@v2
        with:
          name: Songs-of-War-Launcher-setup-${{ env.PACKAGE_VERSION }}.dmg
          path: dist/Songs-of-War-Launcher-setup-${{ env.PACKAGE_VERSION }}.dmg
      - name: Upload Artifact 2
        uses: actions/upload-artifact@v2
        with:
          name: Songs-of-War-Launcher-setup-${{ env.PACKAGE_VERSION }}.dmg.blockmap
          path: dist/Songs-of-War-Launcher-setup-${{ env.PACKAGE_VERSION }}.dmg.blockmap
      - name: Upload Artifact 3
        uses: actions/upload-artifact@v2
        with:
          name: latest-mac.yml
          path: dist/latest-mac.yml
  CI_Windows:
    runs-on: windows-latest
    strategy:
      matrix:
        operating-system: [windows-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Setup node 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: package-version
        uses: nyaascii/package-version@1.0.2-pre
      - name: Module Installation
        uses: CultureHQ/actions-yarn@master
        with:
          args: install
      - name: Checking code syntax
        uses: CultureHQ/actions-yarn@master
        with:
          args: lint
      - run: npm test
      - run: npm run dist:win
      - name: Upload Artifact 1
        uses: actions/upload-artifact@v2
        with:
          name: Songs-of-War-Launcher-setup-${{ env.PACKAGE_VERSION }}.exe
          path: dist/Songs-of-War-Launcher-setup-${{ env.PACKAGE_VERSION }}.exe
      - name: Upload Artifact 2
        uses: actions/upload-artifact@v2
        with:
          name: Songs-of-War-Launcher-setup-${{ env.PACKAGE_VERSION }}.exe.blockmap
          path: dist/Songs-of-War-Launcher-setup-${{ env.PACKAGE_VERSION }}.exe.blockmap
      - name: Upload Artifact 3
        uses: actions/upload-artifact@v2
        with:
          name: latest.yml
          path: dist/latest.yml

